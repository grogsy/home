{"version":3,"sources":["components/Layout/LinkParser.js","components/Header/HeaderItem.js","components/Header/index.js","components/Landing/TopicsList/TopicHeader.js","components/Landing/TopicsList/TopicList.js","components/Landing/TopicsList/TopicContainer.js","components/data.js","components/Landing/TopicsList/index.js","components/Landing/AboutMe/index.js","components/Layout/ContainerSmaller.js","components/Layout/ImageModal.js","components/Layout/Carousel.js","components/Landing/index.js","components/Projects/ProjectCard/Header.js","components/Projects/ProjectCard/Card.js","components/Projects/ProjectCard/CardBody.js","components/Projects/ProjectCard/ProjectDescription.js","components/Projects/ProjectCard/Container.js","components/Projects/index.js","components/Resume/index.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["LinkParser","link","children","extraClasses","className","startsWith","endsWith","target","rel","href","to","HeaderItem","headerName","icon","size","Header","faHome","faTasks","faCopy","faGithub","faLinkedin","TopicHeader","isClosed","headerText","toggleClosed","onClick","faCaretRight","faCaretDown","TopicList","closed","list","map","item","TopicContainer","props","state","bind","this","setState","listItems","React","Component","data","lists","name","content","projects","images","description","deployLink","githubLink","RightBox","Fragment","AboutMe","id","src","alt","ctx","where","Error","ContainerSmall","Modal","handleClose","show","imgSrc","showHideClassName","Carousel","hideModal","showModal","useState","active","setActive","ImageModal","faChevronLeft","idx","length","style","cursor","faChevronRight","Landing","ProjectHeader","toggleOpenClosed","ProjectCard","CardBody","ProjectDescription","ProjectContainer","toggleOpenClose","toggleModal","Card","Projects","project","Resume","display","flexDirection","alignItems","marginBottom","title","width","height","Routes","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44bc92a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LinkParser = ({ link, children, extraClasses }) => {\r\n  let className = \"react-link\";\r\n  if (extraClasses) {\r\n    className = className + \" \" + extraClasses;\r\n  }\r\n\r\n  return link && (link.startsWith(\"http\") || link.endsWith(\".pdf\")) ? (\r\n    <a\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      href={link}\r\n      className={className}\r\n    >\r\n      {children}\r\n    </a>\r\n  ) : (\r\n    <Link to={link ? `/${link}` : \"/\"} className={className}>\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkParser;\r\n","import React from \"react\";\r\nimport Link from \"../Layout/LinkParser\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst HeaderItem = ({ headerName, link, icon }) => {\r\n  return (\r\n    <div className=\"header-item\">\r\n      <Link link={link}>\r\n        <FontAwesomeIcon icon={icon} className=\"header-icon\" size=\"lg\" />\r\n      </Link>\r\n      <div className=\"header-text-container\">\r\n        <Link link={link} extraClasses=\"nav-link\">\r\n          <span className=\"header-text\">{headerName}</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderItem;\r\n","import React from \"react\";\r\nimport { faCopy, faTasks, faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport HeaderItem from \"./HeaderItem\";\r\nimport \"./styles.css\";\r\n\r\nconst Header = ({ className }) => {\r\n  return (\r\n    <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n      <HeaderItem headerName=\"Home\" icon={faHome} />\r\n      <HeaderItem headerName=\"Projects\" icon={faTasks} link=\"projects\" />\r\n      <HeaderItem headerName=\"Resume\" icon={faCopy} link=\"resume\" />\r\n      <HeaderItem\r\n        headerName=\"GitHub\"\r\n        icon={faGithub}\r\n        link=\"https://github.com/grogsy\"\r\n      />\r\n      <HeaderItem\r\n        headerName=\"Linkedin\"\r\n        icon={faLinkedin}\r\n        link=\"https://linkedin.com/brian2772\"\r\n      />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { faCaretRight, faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst TopicHeader = ({ isClosed, headerText, toggleClosed }) => {\r\n  return (\r\n    <div\r\n      className={\r\n        isClosed\r\n          ? \"card-header topic-header closed\"\r\n          : \"card-header topic-header\"\r\n      }\r\n      onClick={toggleClosed}\r\n    >\r\n      <FontAwesomeIcon\r\n        className={\r\n          isClosed ? \"topic-container-icon\" : \"topic-container-icon fade-in\"\r\n        }\r\n        icon={isClosed ? faCaretRight : faCaretDown}\r\n        size=\"lg\"\r\n      />\r\n      <h5>\r\n        <span className=\"badge\">{headerText}</span>\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicHeader;\r\n","import React from \"react\";\r\n\r\nconst getCorrectClassName = closed => {\r\n  return closed ? \"topic-list\" : \"topic-list fade-in\";\r\n};\r\n\r\nconst TopicList = ({ list, isClosed }) => {\r\n  return (\r\n    <div className={getCorrectClassName(isClosed)}>\r\n      <ul className=\"list-group list-group-flush\">\r\n        {list.map(item => {\r\n          return <li className=\"topic-list-item list-group-item\">{item}</li>;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicList;\r\n","import React from \"react\";\r\n\r\nimport TopicHeader from \"./TopicHeader\";\r\nimport TopicList from \"./TopicList\";\r\n\r\n/**\r\n * TODO: Change to state hook\r\n */\r\n\r\nclass TopicContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      closed: true\r\n    };\r\n\r\n    this.toggleClosed = this.toggleClosed.bind(this);\r\n  }\r\n\r\n  toggleClosed() {\r\n    this.setState({ closed: !this.state.closed });\r\n  }\r\n\r\n  isClosed = () => {\r\n    return this.state.closed\r\n      ? `${this.props.className} closed`\r\n      : this.props.className;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.isClosed()}>\r\n        <TopicHeader\r\n          isClosed={this.state.closed}\r\n          headerText={this.props.headerText}\r\n          toggleClosed={this.toggleClosed}\r\n        />\r\n        <TopicList isClosed={this.state.closed} list={this.props.listItems} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopicContainer;\r\n","const data = {\r\n  lists: [\r\n    {\r\n      name: \"Hobbies\",\r\n      content: [\"Programming\", \"Food\"]\r\n    },\r\n    {\r\n      name: \"Favorite Foods\",\r\n      content: [\"Curry\", \"Pork Belly\", \"Taco Surpreme\", \"BBQ\"]\r\n    },\r\n    {\r\n      name: \"Interesting Facts About Me\",\r\n      content: [\r\n        \"I sleep in weird positions\",\r\n        \"I love to drive(sometimes)\",\r\n        \"Pretty bad with names\"\r\n      ]\r\n    }\r\n  ],\r\n  projects: [\r\n    {\r\n      name: \"inGoodCompany\",\r\n      images: [\r\n        \"https://i.imgur.com/vKKbSvO.jpg\",\r\n        \"https://i.imgur.com/5qlEcEn.png\"\r\n      ],\r\n      description:\r\n        \"Social Media Website built with React & GraphQL (The heroku link may take a while to load if the service hasn't been started in a while)\",\r\n      deployLink: \"https://in-good-company.herokuapp.com\",\r\n      githubLink: \"https://github.com/Hucklyberry-Hound/ingoodcompany\"\r\n    },\r\n    {\r\n      name: \"Eccentric Elven Arts\",\r\n      images: [\r\n        \"https://i.imgur.com/Kocq3Gz.jpg\",\r\n        \"https://i.imgur.com/tTlGP4j.png\"\r\n      ],\r\n      description: \"E-commerce Site built using NERD Stack\",\r\n      deployLink: \"https://eccentric-elven-arts.herokuapp.com/\",\r\n      githubLink: \"https://github.com/EccentricElves/GraceShopper\"\r\n    },\r\n    {\r\n      name: \"pawpals\",\r\n      description:\r\n        \"Dog adoption mobile app based on Tinders matching mechanism. Built using React Native and Firebase\",\r\n      images: [\"https://i.imgur.com/I5rTyTy.png\"],\r\n      githubLink: \"https://github.com/grogsy/pawpals\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport TopicContainer from \"./TopicContainer\";\r\nimport data from \"../../data\";\r\nimport \"./topic.css\";\r\n\r\nconst RightBox = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {data.lists.map(item => (\r\n        <TopicContainer\r\n          className=\"topic-container\"\r\n          headerText={item.name}\r\n          listItems={item.content}\r\n        />\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RightBox;\r\n","import React from \"react\";\r\nimport \"./about.css\";\r\n\r\nlet me =\r\n  \"https://scontent.fewr1-2.fna.fbcdn.net/v/t1.15752-9/s2048x2048/76618293_549823525585525_5234997996277465088_n.jpg?_nc_cat=111&_nc_oc=AQlSpP7Y3-nEWSNFOL6CPlVhegz0FMZtAV0VOeQLfC_HX20xm6bD2k2kcmVVjjvjEkg&_nc_ht=scontent.fewr1-2.fna&oh=4c66c2eaf36cc4a1cda6139f7c4509fa&oe=5E58DA07\";\r\n\r\nconst AboutMe = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"about-text\">\r\n        <p>Hi I'm Brian!</p>\r\n        <p>Welcome to my Website.</p>\r\n        <p>I'm using this as a playground to try out front-end things.</p>\r\n        <p>Me messing with python: </p>\r\n      </div>\r\n      <div id=\"me-container\">\r\n        <img className=\"me\" src={me} alt=\"me\" />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\r\n\r\nconst ctx = where => {\r\n  switch (where) {\r\n    case \"left\":\r\n      return \"about\";\r\n    case \"right\":\r\n      return \"topics\";\r\n    default:\r\n      throw new Error(\"ctx not working as expected\");\r\n  }\r\n};\r\n\r\nconst ContainerSmall = ({ children, where }) => {\r\n  return <div className={ctx(where)}>{children}</div>;\r\n};\r\n\r\nexport default ContainerSmall;\r\n","import React from \"react\";\r\nimport \"./styles/image_modal.css\";\r\n\r\nconst Modal = ({ handleClose, show, imgSrc }) => {\r\n  const showHideClassName = show\r\n    ? \"modal-image-focused modal-image-show zoom-out\"\r\n    : \"modal-image-focused modal-image-hide\";\r\n\r\n  return (\r\n    <div className={showHideClassName} onClick={handleClose}>\r\n      <section className=\"modal-image-main\">\r\n        <img className=\"modal-img zoom-out\" alt=\"Project\" src={imgSrc} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { ImageModal } from \"./index\";\r\nimport \"./styles/carousel.css\";\r\n\r\nconst Carousel = ({ images, show, hideModal, showModal }) => {\r\n  const [active, setActive] = useState(0);\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n      <ImageModal show={show} handleClose={hideModal} imgSrc={images[active]} />\r\n      <FontAwesomeIcon\r\n        className=\"carousel-btn\"\r\n        icon={faChevronLeft}\r\n        size=\"3x\"\r\n        onClick={() => {\r\n          let idx = active - 1;\r\n          if (idx < 0) idx = images.length - 1;\r\n          setActive(idx);\r\n        }}\r\n      />\r\n      <img\r\n        className=\"card-img-top carousel-img\"\r\n        style={{ cursor: \"zoom-in\" }}\r\n        src={images[active]}\r\n        alt=\"Something wrong\"\r\n        onClick={showModal}\r\n      />\r\n      <FontAwesomeIcon\r\n        className=\"carousel-btn\"\r\n        icon={faChevronRight}\r\n        size=\"3x\"\r\n        onClick={() => {\r\n          let idx = active + 1;\r\n          if (idx >= images.length) idx = 0;\r\n          setActive(idx);\r\n        }}\r\n      />\r\n    </div>\r\n  ); //\r\n};\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\n\r\nimport TopicList from \"./TopicsList\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport { ContainerSmall } from \"../Layout\";\r\nimport \"./main.css\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <ContainerSmall where=\"left\">\r\n        <AboutMe />\r\n      </ContainerSmall>\r\n      <ContainerSmall where=\"right\">\r\n        <TopicList />\r\n      </ContainerSmall>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { faCaretRight, faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ProjectHeader = ({ isClosed, toggleOpenClosed, headerText }) => {\r\n  return (\r\n    <div className=\"card-header project-header\" onClick={toggleOpenClosed}>\r\n      <FontAwesomeIcon\r\n        className={\r\n          isClosed ? \"topic-container-icon\" : \"topic-container-icon fade-in\"\r\n        }\r\n        icon={isClosed ? faCaretRight : faCaretDown}\r\n        size=\"lg\"\r\n      />\r\n      <h5>\r\n        <span className=\"badge\">{headerText}</span>\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectHeader;\r\n","import React from \"react\";\r\n\r\nconst ProjectCard = ({ isClosed, children }) => {\r\n  return <div className={isClosed ? \"card\" : \"card fade-in\"}>{children}</div>;\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\n\r\nconst CardBody = ({ children }) => {\r\n  return <div className=\"card-body bg-dark\">{children}</div>;\r\n};\r\n\r\nexport default CardBody;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst ProjectDescription = ({ description, deployLink, githubLink }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <p className=\"card-text text-info\">{description}</p>\r\n      {deployLink ? (\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href={deployLink}\r\n          className=\"btn btn-info\"\r\n        >\r\n          View In Heroku\r\n        </a>\r\n      ) : (\r\n        <a className=\"btn btn-secondary disabled\">\r\n          This project isn't deployed :(\r\n        </a>\r\n      )}\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={githubLink}>\r\n        <FontAwesomeIcon\r\n          className=\"card-icon react-link\"\r\n          icon={faGithub}\r\n          size=\"3x\"\r\n        />\r\n      </a>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectDescription;\r\n","import React, { useState } from \"react\";\r\nimport CardHeader from \"./Header\";\r\nimport Card from \"./Card\";\r\nimport CardBody from \"./CardBody\";\r\nimport ProjectDescription from \"./ProjectDescription\";\r\nimport { Carousel } from \"../../Layout\";\r\n\r\nconst ProjectContainer = ({\r\n  headerText,\r\n  description,\r\n  images,\r\n  deployLink,\r\n  githubLink\r\n}) => {\r\n  const [isClosed, toggleOpenClose] = useState(true);\r\n  const [showModal, toggleModal] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={isClosed ? \"project-container closed\" : \"project-container\"}\r\n    >\r\n      <CardHeader\r\n        isClosed={isClosed}\r\n        headerText={headerText}\r\n        toggleOpenClosed={() => {\r\n          toggleOpenClose(!isClosed);\r\n        }}\r\n      />\r\n      <Card isClosed={isClosed}>\r\n        <Carousel\r\n          images={images}\r\n          show={showModal}\r\n          hideModal={() => {\r\n            toggleModal(false);\r\n          }}\r\n          showModal={() => {\r\n            toggleModal(true);\r\n          }}\r\n        />\r\n        <CardBody>\r\n          <ProjectDescription\r\n            description={description}\r\n            deployLink={deployLink}\r\n            githubLink={githubLink}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectContainer;\r\n","import React from \"react\";\r\nimport ProjectContainer from \"./ProjectCard/Container\";\r\nimport data from \"../data\";\r\nimport \"./styles.css\";\r\n\r\nconst Projects = props => {\r\n  return (\r\n    <div className=\"project-main\">\r\n      {data.projects.map(project => (\r\n        <ProjectContainer\r\n          headerText={project.name}\r\n          description={project.description}\r\n          deployLink={project.deployLink}\r\n          githubLink={project.githubLink}\r\n          images={project.images}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"../Layout\";\r\nconst Resume = props => {\r\n  return (\r\n    <div\r\n      className=\"main\"\r\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\r\n    >\r\n      <Link link=\"resume.pdf\">\r\n        <button className=\"btn btn-info\" style={{ marginBottom: \"10px\" }}>\r\n          Open In PDF Viewer\r\n        </button>\r\n      </Link>\r\n      <iframe\r\n        title=\"Resume\"\r\n        src=\"resume.pdf#toolbar=0&navpanes=0\"\r\n        width=\"100%\"\r\n        height=\"800px\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Landing from \"./Landing\";\r\nimport Projects from \"./Projects\";\r\nimport Resume from \"./Resume\";\r\n\r\nconst Routes = props => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/projects\" component={Projects} />\r\n      <Route path=\"/resume\" component={Resume} />\r\n      <Route component={Landing} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Routes from \"./components/Routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header className=\"header\" />\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}